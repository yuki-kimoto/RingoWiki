<%
  use Text::Markdown ();
  use Text::Diff ();
  
  my $api = wiki_api;
  
  my $wiki_id = param('wiki_id');
  my $page_name = param('page_name');
  
  # Exeption
  unless (defined $wiki_id && defined $page_name) {
    $self->render_exeption;
    return;
  }
  
  # Wiki exists?
  my $wiki = $self->app->dbi->model('wiki')->select(
    where => {id => $wiki_id}
  )->one;
  
  # Not found
  unless ($wiki) {
    $self->render_not_found;
    return;
  }
  
  my $content;
  
  # Page
  my $page = $self->app->dbi->model('page')->select(
    where => {wiki_id => $wiki_id, name => $page_name}
  )->one;
  $page = {not_exists => 1, wiki_id => $wiki_id, name => $page_name, content => ''}
    unless $page;
  
  my $op = param('op') || '';
  my $errors;
  my $html_content;
  my @lines;
  if (lc $self->req->method eq 'post') {
    if ($op eq 'preview') {
      
      # Validation
      my $raw_params = $api->params;
      my $rule = [
        wiki_id => ['word'],
        page_name => ['not_blank'],
        content => ['any']
      ];
      my $vresult = $self->app->validator->validate($raw_params, $rule);
      my $params = $vresult->data;
      my $wiki_id = $params->{wiki_id};
      my $content = $params->{content};
      my $page_name = $params->{page_name};
      
      # Exception
      if ($vresult->is_ok) {
        # HTML filter
        my $hf = Ringowiki::HTMLFilter->new;
        
        # Prase wiki link
        $html_content = $hf->parse_wiki_link($self, $content, $wiki_id);
        
        # Sanitize and Markdown
        $html_content = Text::Markdown::markdown $hf->sanitize_tag($content);
      }
      else {
        $errors = $vresult->messages;
      }
    }
    elsif ($op eq 'diff') {

      # Validation
      my $raw_params = {map { $_ => $self->param($_) } $self->param};
      my $rule = [
        wiki_id => ['word'],
        page_name => ['not_blank'],
        content => ['any']
      ];
      my $vresult = $self->app->validator->validate($raw_params, $rule);
      my $params = $vresult->data;
      my $wiki_id = $params->{wiki_id};
      my $page_name = $params->{page_name};
      my $content_new = $params->{content};
      
      # Exception
      return $self->render(json => {success => 0})
        unless defined $wiki_id && defined $page_name && defined $content_new;
      
      # Content diff
      my $content = $self->app->dbi->model('page')
        ->select('content', where => {wiki_id => $wiki_id, name => $page_name})
        ->value;
      $content = '' unless defined $content;
      
      $content =~ s/\x0D\x0A/\x0A/g;
      $content_new =~ s/\x0D\x0A/\x0A/g;
      
      my $content_diff = Text::Diff::diff \$content, \$content_new, {STYLE => 'Unified'};
      
      warn $content_diff;
      
      my @diff_lines = split /\n/, $content_diff;
      shift @diff_lines;
      my $line_number = 1;
      for my $diff_line (@diff_lines) {
        push @lines, $diff_line;
        $line_number++;
      }
    }
    elsif ($op eq 'save') {
      
    }
  }
%>

% my $title = "「$page_name」" . ($page->{not_exists} ? 'を新規作成' : 'を編集');
% layout 'common', title => $title;

<h1 class="header">
  <%= $title %>
</h1>

% if ($op eq 'preview') {
  <div id="preview_area">
    <div id="preview_header">プレビュー</div>
    <div id="preview_content"><%= Mojo::ByteStream->new($html_content) %></div>
  </div>
% }

% if ($op eq 'diff') {
  <div id="diff_area">
    <div id="diff_header">差分</div>
    <div id="diff_content">
      % for my $line (@lines) {
        <pre style="border:none;background:white;padding:0px;margin:0px;"><%= $line %></pre>
      % }
    </div>
  </div>
% }

<form name="edit_page" class="edit_form" role="form" action="<%= url_for('current') %>" method="post" >
  <input type="hidden" name="wiki_id" value="<%= param('wiki_id') %>">
  <input type="hidden" name="page_name" value="<%= $page_name %>">
  <%= text_area 'content', class => "form-control", => cols => "80", rows => "20", begin %>
    <%= $page->{content} =%>
  % end

  <div class="bottom_btns">
    <input type="button" onclick="$(this).closest('form').attr('action', '<%= url_for->query(op => 'preview') %>').submit();" class="btn btn-default" value="プレビュー" />
    <input type="button" onclick="$(this).closest('form').attr('action', '<%= url_for->query(op => 'diff') %>').submit();" class="btn btn-default" value="差分を表示" />
    <input type="button" onclick="$(this).closest('form').find('op').val('save');$(this).closest('form').submit();" class="btn btn-primary" value="保存する" />
  </div>
</form>
